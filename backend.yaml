- name: configure backend server
  hosts: backend
  become: yes
  vars:
    login_host: db.daws78s.xyz
  vars_prompt:
  - name: PASSWORD
    prompt: please enter your password
    private: false
  tasks:
  - name: Disable default NodeJS server
    ansible.builtin.command: dnf module disable nodejs -y

  - name: Enable NodeJS server
    ansible.builtin.command: dnf module enable nodejs:20 -y

  - name: Install NodeJS server
    ansible.builtin.dnf:
      name: "{{ item.name }}"
      state: "{{ item.state }}"
    loop:
    - {name: 'nodejs', state: latest}
    - {name: 'mysql', state: latest}


  - name: create expense user
    ansible.builtin.user:
      name: expense

  - name: create app directory
    ansible.builtin.file:
      path: /app
      state: directory

  - name: Download backend code
    ansible.builtin.get_url:
      url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
      dest: /tmp/backend.zip

  - name: Unzip backend code
    ansible.builtin.unarchive:
      src: /tmp/backend.zip
      dest: /app
      remote_src: yes

  # - name: Install npm dependencies
  #   community.general.npm:
  #     name: coffee-script
  #     path: /app/npm install

  - name: Install npm dependencies
    ansible.builtin.command: npm install
    args: 
      chdir: /app

  - name: Copy backend service
    ansible.builtin.copy:
      src: backend.service
      dest: /etc/systemd/system/backend.service

  - name: install python mysql dependencies
    ansible.builtin.pip:
      name: 
      - PyMySQL
      - cryptography
      executable: pip3.9

  - name: import data into mysql
    community.mysql.mysql_db:
      login_user: root
  #     login_password: "{{PASSWORD}}"
  #     login_host: "{{login_host}}"
  #     target: /app/schema/backend.sql
  #     state: import
  #     name: all


  

  
